{"version":3,"file":"index.js","sources":["../../../src/shell.ts"],"sourcesContent":["import { exec } from 'node:child_process'\nimport { promisify } from 'node:util'\n\nimport { error, info, setFailed } from '@actions/core'\n\ninterface ConsoleOutput {\n  stdout: string\n  stderr: string\n}\n\n/**\n * Executes a shell command asynchronously.\n * @param {string} command - The command to execute.\n * @param {NodeJS.Platform} platform - The platform, defaults to `process.platform`.\n * @returns {Promise<string>} The standard output of the command.\n */\nconst execShellCommand = async (\n  command: string,\n  platform: NodeJS.Platform = process.platform\n): Promise<string> => {\n  info(`Executing command: ${command}`)\n\n  const execAsPromised = promisify(exec)\n\n  // Determine the shell to use\n  const shell =\n    process.env.SHELL && platform !== 'win32'\n      ? process.env.SHELL // Use SHELL if set (only on non-Windows)\n      : platform === 'win32'\n        ? 'C:\\\\Program Files\\\\Git\\\\bin\\\\bash.exe'\n        : '/usr/bin/bash'\n\n  info(`Using shell: ${shell}`)\n\n  try {\n    const output: ConsoleOutput = await execAsPromised(command, { shell })\n\n    if (output.stdout) {\n      info(`stdout: ${output.stdout.trim()}`)\n    }\n    if (output.stderr) {\n      error(`stderr: ${output.stderr.trim()}`)\n    }\n\n    return output.stdout.trim()\n  } catch (err: unknown) {\n    const errorMessage = (err as Error).message || 'Unknown error occurred'\n    setFailed(`Command execution failed: ${errorMessage}`)\n    return '' // Return an empty string on failure to prevent undefined behavior\n  }\n}\n\nexport { type ConsoleOutput, execShellCommand }\n"],"names":["info","error","setFailed"],"mappings":";;;;AAUA;;;;;AAKG;AACG,MAAA,gBAAgB,GAAG,OACvB,OAAe,EACf,QAAA,GAA4B,OAAO,CAAC,QAAQ,KACzB;AACnB,IAAAA,gBAAI,CAAC,CAAA,mBAAA,EAAsB,OAAO,CAAA,CAAE,CAAC;AAErC,IAAA,MAAM,cAAc,GAAG,SAAS,CAAC,IAAI,CAAC;;IAGtC,MAAM,KAAK,GACT,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,QAAQ,KAAK;AAChC,UAAE,OAAO,CAAC,GAAG,CAAC,KAAK;UACjB,QAAQ,KAAK;AACb,cAAE;cACA,eAAe;AAEvB,IAAAA,gBAAI,CAAC,CAAA,aAAA,EAAgB,KAAK,CAAA,CAAE,CAAC;AAE7B,IAAA,IAAI;QACF,MAAM,MAAM,GAAkB,MAAM,cAAc,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC;AAEtE,QAAA,IAAI,MAAM,CAAC,MAAM,EAAE;YACjBA,gBAAI,CAAC,CAAW,QAAA,EAAA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAE,CAAA,CAAC;;AAEzC,QAAA,IAAI,MAAM,CAAC,MAAM,EAAE;YACjBC,iBAAK,CAAC,CAAW,QAAA,EAAA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAE,CAAA,CAAC;;AAG1C,QAAA,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;;IAC3B,OAAO,GAAY,EAAE;AACrB,QAAA,MAAM,YAAY,GAAI,GAAa,CAAC,OAAO,IAAI,wBAAwB;AACvE,QAAAC,qBAAS,CAAC,CAAA,0BAAA,EAA6B,YAAY,CAAA,CAAE,CAAC;QACtD,OAAO,EAAE,CAAA;;AAEb;;;;"}